name: CI

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-base:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Use Nightly
      uses: actions-rs/toolchain@v1
      with:
          toolchain: nightly
          override: true
    - name: Build
      uses: actions-rs/cargo@v1
      with:
          command: build
          args: --verbose

  build-all-features:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Use Nightly
      uses: actions-rs/toolchain@v1
      with:
          toolchain: nightly
          override: true
    - name: Build
      uses: actions-rs/cargo@v1
      with:
          command: build
          args: --verbose --all-features

  test-base:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Use Nightly
      uses: actions-rs/toolchain@v1
      with:
          toolchain: nightly
          override: true
    - name: Test
      uses: actions-rs/cargo@v1
      with:
          command: test
          args: --verbose

  test-all-features:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Use Nightly
      uses: actions-rs/toolchain@v1
      with:
          toolchain: nightly
          override: true
    - name: Test
      uses: actions-rs/cargo@v1
      with:
          command: test
          args: --verbose --all-features

  coverage:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Use Nightly
      uses: actions-rs/toolchain@v1
      with:
          toolchain: nightly
          components: llvm-tools-preview
          override: true
    - name: Install Binary Utilities
      uses: actions-rs/cargo@v1
      with:
          command: install
          args: cargo-binutils
    - name: Set RUSTFLAGS
      run: export RUSTFLAGS="-Zinstrument-coverage"
    - name: Set LLVM_PROFILE_FILE
      run: export LLVM_PROFILE_FILE="default-%m.profraw"
    - name: Run Tests
      uses: actions-rs/cargo@v1
      with:
          command: test
          args: --all-features --tests
    - name: Merge Profile Data
      uses: actions-rs/cargo@v1
      with:
          command: profdata
          args: -- merge -sparse -text default-*.profraw -o default.txt
    - name: Generate LCOV Report
      uses: actions-rs/cargo@v1
      with:
          command: cov
          args: cargo cov -- export --instr-profile=default.profdata --object target/debug/deps/merk-% --format=lcov >> lcov.info
    - name: Upload to codecov.io
      uses: codecov/codecov-action@v1
      with:
          files: lcov.info
          fail_ci_if_error: true
    
  format:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Use Nightly
      uses: actions-rs/toolchain@v1
      with:
          toolchain: nightly
          components: rustfmt
          override: true
    - name: Check
      uses: actions-rs/cargo@v1
      with:
          command: fmt
          args: --all -- --check

  clippy:
    runs-on: ubuntu-latest 
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Use Nightly
      uses: actions-rs/toolchain@v1
      with:
          toolchain: nightly
          components: clippy
          override: true
    - name: Check 
      uses: actions-rs/clippy-check@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        args: --all-features

  benches:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Use Nightly
      uses: actions-rs/toolchain@v1
      with:
          toolchain: nightly
          override: true
    - name: Run Benches
      uses: actions-rs/cargo@v1
      with:
          command: bench

